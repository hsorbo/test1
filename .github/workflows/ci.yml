name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
env:
  FRIDA_VERSION: 16.4.10
  NUPKG_VERSION: 0.0.1
jobs:
  linux-so:
    strategy:
      matrix:
        arch: [x86, x86_64, arm64, mips64] # arch: [x86_64-musl, armhf, arm64-musl, mips, mipsel, mips64el]
    runs-on: ubuntu-latest
    steps:
      - name: Link
        run: |
          PLATFORM=linux-$(uname -m)
          wget -q https://github.com/frida/frida/releases/download/$FRIDA_VERSION/frida-core-devkit-$FRIDA_VERSION-$PLATFORM.tar.xz
          tar xvf frida-core-devkit-$FRIDA_VERSION-$PLATFORM.tar.xz
          RID_ARCH=${{ matrix.arch == 'x86_64' && 'x64' || matrix.arch }}
          RID=linux-$RID_ARCH
          PKG=runtimes/$RID/native
          mkdir -p $PKG
          gcc -o $PKG/frida.so -shared -Wl,--whole-archive libfrida-core.a -Wl,--no-whole-archive
          zip frida-core-devkit.runtime.$RID.$NUPKG_VERSION.nupkg -r runtimes
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: "*.nupkg"
  # macos-dylib:
  #   strategy:
  #     matrix:
  #       arch: [x86_64, arm64, arm64e]
  #   runs-on: macos-latest
  #   steps:
  #     - name: Link
  #       run: |
  #         PLATFORM=macos-$(uname -m)
  #         wget -q https://github.com/frida/frida/releases/download/$FRIDA_VERSION/frida-core-devkit-$FRIDA_VERSION-$PLATFORM.tar.xz
  #         tar xvzf frida-core-devkit-$FRIDA_VERSION-$PLATFORM.tar.xz
  #         find .
  #         nm -gUj libfrida-core.a | grep "^_\(frida\|g_\).*" | grep -v "frida_tunnel_interface_observer_new" > symbols.txt
  #         clang libfrida-core.a \
  #           -framework Foundation \
  #           -framework AppKit \
  #           -framework IOKit \
  #           -framework Security \
  #           -lresolv \
  #           -dynamiclib \
  #           -lbsm -ldl -lm -fPIC \
  #           -Wl,-ld_classic \
  #           -Wl,-exported_symbols_list,symbols.txt \
  #           -o frida.dylib
  #     - name: Archive
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: macos-${{ matrix.arch }}
  #         path: frida.dylib
  windows-dll:
    strategy:
      matrix:
        arch: [x86_64]  # [x86, x86_64]
      fail-fast: false
    runs-on: windows-latest
    env:
      ARCH: ${{ matrix.arch == 'x86_64' && 'x64' || matrix.arch }}
    steps:
      - name: Fetch
        run: |
          Invoke-WebRequest https://github.com/frida/frida/releases/download/${Env:FRIDA_VERSION}/frida-core-devkit-${Env:FRIDA_VERSION}-windows-${{ matrix.arch }}.exe -OutFile sfx.exe
          ./sfx.exe
      - uses: ilammy/msvc-dev-cmd@v1
      - run: dumpbin /SYMBOLS frida-core.lib > symbols.txt
      - name: "bonanza"
        shell: bash
        run: |
          echo "EXPORTS" > exports.def
          cat symbols.txt | grep External | sed 's/.*| //g' | egrep '^_(frida|g_)' | grep -v "_frida_tunnel_interface_observer_new"  >> exports.def
      - run: link.exe /MACHINE:${env:ARCH} /DLL /DEF:exports.def /OUT:frida.dll frida-core.lib Ws2_32.lib User32.lib Setupapi.lib Gdi32.lib Advapi32.lib Crypt32.lib Dnsapi.lib Shell32.lib Ole32.lib Psapi.lib Shlwapi.lib
      - run: mkdir runtimes/win-${env:ARCH}/native
      - run: mv frida.dll runtimes/win-${env:ARCH}/native
      - run: Compress-Archive -Path runtimes -DestinationPath frida-core-devkit.runtime.win-${env:ARCH}.${env:NUPKG_VERSION}.nupkg
      - run: ls
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: "*.nupkg"
  package:
    runs-on: ubuntu-latest
    needs:
      - linux-so
      - windows-dll
    steps:
      - uses: actions/checkout@v4
      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          pattern: "*-*"
          merge-multiple: true
          path: build/
      - run: zip build/frida-core-devkit.$NUPKG_VERSION.nupkg runtime.json
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: "**/*.nupkg"
